services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: productivity-tracker-db
    environment:
      POSTGRES_DB: productivity_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - productivity-network

  # SpringBoot API
  springboot-api:
    build:
      context: ./backend/springboot-api
      dockerfile: Dockerfile
    container_name: productivity-tracker-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/productivity_tracker
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - productivity-network

  # Node.js Microservices
  nodejs-microservices:
    build:
      context: ./backend/nodejs-microservices
      dockerfile: Dockerfile
    container_name: productivity-tracker-microservices
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: productivity_tracker
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - productivity-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: productivity-tracker-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
      NEXT_PUBLIC_MICROSERVICES_URL: http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - springboot-api
      - nodejs-microservices
    networks:
      - productivity-network

volumes:
  postgres_data:

networks:
  productivity-network:
    driver: bridge